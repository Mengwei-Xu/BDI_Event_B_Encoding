<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.theory.core.deployedTheoryRoot org.eventb.core.accurate="true" org.eventb.core.comment="GENERATED THEORY FILE: !DO NOT CHANGE!" org.eventb.theory.core.modificationHashValue="c98b21bc5474d038a0beaba9adc67382" org.eventb.theory.core.outdated="false">
    <org.eventb.theory.core.scTypeParameter name="A" org.eventb.core.source="/OptionTheory/Option.tuf|org.eventb.theory.core.theoryRoot#Option|org.eventb.theory.core.typeParameter#'" org.eventb.core.type="ℙ(A)"/>
    <org.eventb.theory.core.scDatatypeDefinition name="Option" org.eventb.core.source="/OptionTheory/Option.tuf|org.eventb.theory.core.theoryRoot#Option|org.eventb.theory.core.datatypeDefinition#(" org.eventb.theory.core.hasError="false">
        <org.eventb.theory.core.scTypeArgument name="A" org.eventb.core.source="/OptionTheory/Option.tuf|org.eventb.theory.core.theoryRoot#Option|org.eventb.theory.core.datatypeDefinition#(|org.eventb.theory.core.typeArgument#'" org.eventb.theory.core.givenType="A"/>
        <org.eventb.theory.core.scDatatypeConstructor name="None" org.eventb.core.source="/OptionTheory/Option.tuf|org.eventb.theory.core.theoryRoot#Option|org.eventb.theory.core.datatypeDefinition#(|org.eventb.theory.core.datatypeConstructor#("/>
        <org.eventb.theory.core.scDatatypeConstructor name="Some" org.eventb.core.source="/OptionTheory/Option.tuf|org.eventb.theory.core.theoryRoot#Option|org.eventb.theory.core.datatypeDefinition#(|org.eventb.theory.core.datatypeConstructor#)">
            <org.eventb.theory.core.scConstructorArgument name="element" org.eventb.core.source="/OptionTheory/Option.tuf|org.eventb.theory.core.theoryRoot#Option|org.eventb.theory.core.datatypeDefinition#(|org.eventb.theory.core.datatypeConstructor#)|org.eventb.theory.core.constructorArgument#'" org.eventb.core.type="A"/>
        </org.eventb.theory.core.scDatatypeConstructor>
    </org.eventb.theory.core.scDatatypeDefinition>
    <org.eventb.theory.core.scNewOperatorDefinition name="Optioo" org.eventb.core.label="isSome" org.eventb.core.predicate="⊤" org.eventb.core.source="/OptionTheory/Option.tuf|org.eventb.theory.core.theoryRoot#Option|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
        <org.eventb.theory.core.scOperatorArgument name="option" org.eventb.core.source="/OptionTheory/Option.tuf|org.eventb.theory.core.theoryRoot#Option|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="Option(A)"/>
        <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/OptionTheory/Option.tuf|org.eventb.theory.core.theoryRoot#Option|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="option">
            <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="None ⦂ Option(A)" org.eventb.core.source="/OptionTheory/Option.tuf|org.eventb.theory.core.theoryRoot#Option|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="Some(a)" org.eventb.core.source="/OptionTheory/Option.tuf|org.eventb.theory.core.theoryRoot#Option|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
        </org.eventb.theory.core.scRecursiveOperatorDefinition>
    </org.eventb.theory.core.scNewOperatorDefinition>
    <org.eventb.theory.core.scProofRulesBlock name="generatedBlock" org.eventb.core.source="/OptionTheory/Option.tuf|org.eventb.theory.core.theoryRoot#Option|org.eventb.theory.core.newOperatorDefinition#)">
        <org.eventb.theory.core.scMetavariable name="option" org.eventb.core.source="/OptionTheory/Option.tuf|org.eventb.theory.core.theoryRoot#Option|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.core.type="Option(A)"/>
        <org.eventb.theory.core.scMetavariable name="a" org.eventb.core.source="/OptionTheory/Option.tuf|org.eventb.theory.core.theoryRoot#Option|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.core.type="A"/>
        <org.eventb.theory.core.scRewriteRule name="Option.isSome case 0" org.eventb.core.accurate="true" org.eventb.core.label="Option.isSome case 0" org.eventb.core.source="/OptionTheory/Option.tuf|org.eventb.theory.core.theoryRoot#Option|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isSome expansion" org.eventb.theory.core.formula="isSome(None ⦂ Option(A))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isSome rhs" org.eventb.core.label="isSome rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/OptionTheory/Option.tuf|org.eventb.theory.core.theoryRoot#Option|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="Option.isSome case 1" org.eventb.core.accurate="true" org.eventb.core.label="Option.isSome case 1" org.eventb.core.source="/OptionTheory/Option.tuf|org.eventb.theory.core.theoryRoot#Option|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isSome expansion" org.eventb.theory.core.formula="isSome(Some(a))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isSome rhs" org.eventb.core.label="isSome rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/OptionTheory/Option.tuf|org.eventb.theory.core.theoryRoot#Option|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.formula="⊤"/>
        </org.eventb.theory.core.scRewriteRule>
    </org.eventb.theory.core.scProofRulesBlock>
</org.eventb.theory.core.deployedTheoryRoot>
